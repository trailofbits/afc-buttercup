{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-competition-api
  labels:
    app: competition-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: competition-api
  template:
    metadata:
      labels:
        app: competition-api
    spec:
      {{- include "buttercup.imagePullSecrets" . | nindent 6 }}
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
          - "ghcr.io"
      initContainers:
      containers:
        - name: dind
          image: "docker:24.0.6-dind"
          securityContext:
            privileged: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
            - name: REGISTRY_HOST
              value: "{{ .Release.Name }}-registry-cache"
          command:
            - sh
            - -c
            - |
              # Install required packages
              apk add --no-cache socat ca-certificates

              # Setup certificates
              cp /certs/tls.crt /usr/local/share/ca-certificates/registry-cache.crt
              update-ca-certificates

              # Start socat proxies in background
              socat TCP-LISTEN:443,fork,reuseaddr TCP:$REGISTRY_HOST:443 &
              socat TCP-LISTEN:80,fork,reuseaddr TCP:$REGISTRY_HOST:80 &

              # Start Docker daemon with socket in a location that can be shared
              dockerd-entrypoint.sh
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
            - name: tls-cert
              mountPath: /certs
              readOnly: true
            - name: tmp-storage
              mountPath: /tmp
        - name: competition-api
          image: "{{ .Values.global.competitionApiImage.repository }}:{{ .Values.global.competitionApiImage.tag }}"
          imagePullPolicy: {{ .Values.global.competitionApiImage.pullPolicy }}
          securityContext:
            privileged: true
          args: ["server"]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: SCANTRON_GITHUB_PAT
              valueFrom:
                secretKeyRef:
                  name: ghcr
                  key: {{ if (lookup "v1" "Secret" .Release.Namespace "ghcr").data.scantron_github_pat }}scantron_github_pat{{ else }}pat{{ end }}
          volumeMounts:
            - name: scantron-config
              mountPath: /etc/scantron/scantron.yaml
              subPath: scantron.yaml
            - name: tmp-storage
              mountPath: /tmp
      volumes:
        - name: scantron-config
          configMap:
            name: {{ .Release.Name }}-scantron-config
        - name: tmp-storage
          emptyDir: {}
        - name: dind-storage
          emptyDir: {}
        - name: tls-cert
          secret:
            secretName: registry-cache-tls
{{- end }}
